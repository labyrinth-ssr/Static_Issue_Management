create database if not exists sonar;
use sonar;
create table if not exists `issues`(
    id Integer AUTO_INCREMENT,
    `key` varchar(30),
    rule varchar(20),
    severity varchar(20),
    component varchar(100),
    project varchar(20),
    line Integer,
    hash varchar(50),
    textRange varchar(50),
    flows varchar(500),
    status varchar(10),
    message varchar(200),
    effort varchar(20),
    debt varchar(20),
    author varchar(50),
    tags varchar(50),
    transitions varchar(50),
    actions varchar(100),
    comments varchar(50),
    creationDate varchar(50),
    updateDate varchar(50),
    `type` varchar(20),
    quickFixAvailable varchar(1),
    primary key(id)
);

create table if not exists `rules`(
      id Integer AUTO_INCREMENT,
      `key` varchar(50),
      repo varchar(50),
      `name` varchar(50),
      createdAt varchar(30),
      htmlDesc varchar(500),
      mdDesc varchar(500),
      severity varchar(10),
      status varchar(10),
      isTemplate varchar(1),
      tags varchar(50),
      sysTags varchar(50),
      lang varchar(10),
      langName varchar(10),
      params varchar(50),
      defaultDebtRemFnType varchar(20),
      defaultDebtRemFnCoeff varchar(20),
      defaultDebtRemFnOffset varchar(10),
      effortToFixDescription varchar(20),
      debtOverloaded varchar(1),
      debtRemFnType varchar(20),
      debtRemFnCoeff varchar(20),
      debtRemFnOffset varchar(20),
      type varchar(20),
      defaultRemFnType varchar(20),
      defaultRemFnGapMultiplier varchar(20),
      defaultRemFnBaseEffort varchar(20),
      remFnType varchar(20),
      remFnGapMultiplier varchar(20),
      remFnBaseEffort varchar(20),
      remFnOverloaded varchar(1),
      gapDescription varchar(30),
      `scope` varchar(10),
      isExternal varchar(1),
      descriptionSections varchar(200),
      educationPrinciples varchar(50),
      primary key(id)
);